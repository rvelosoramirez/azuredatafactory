{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "datafactoryrv01"
		},
		"BlobMovies_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"BlobMovies\""
		},
		"ls_blob_covidbs_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ls_blob_covidbs\""
		},
		"ls_dls_coviddl_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"ls_dls_coviddl\""
		},
		"ls_dls_coviddl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidrdl01rv.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/moviesMappingDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Movies": {},
									"MoviesClean": {},
									"MoviesbyYear": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_covid_population_ingestion_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validar existencia archivo",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_covid_population_raw_bs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "00:00:30",
							"sleep": 10
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Validar existencia archivo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_covid_population_raw_bs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Metadata1').output.columnCount,12)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://trial",
										"method": "POST",
										"headers": {},
										"body": "Fallo"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Covid Data_copy_True",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "date",
														"type": "DateTime",
														"physicalType": "String"
													},
													"sink": {
														"name": "date",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "state",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "state",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "city",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "city",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "place_type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "place_type",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "confirmed",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "confirmed",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "deaths",
														"type": "Int32",
														"physicalType": "String"
													},
													"sink": {
														"name": "deaths",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "order_for_place",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "order_for_place",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "is_last",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "is_last",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "estimated_population_2019",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "estimated_population_2019",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "city_ibge_code",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "city_ibge_code",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "confirmed_per_100k_inhabitants",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "confirmed_per_100k_inhabitants",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "death_rate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "death_rate",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_covid_population_raw_bs",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_covid_population_raw_dl",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Borrar",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Covid Data_copy_True",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_covid_population_raw_bs",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_covid_population_raw_bs')]",
				"[concat(variables('factoryId'), '/datasets/ds_covid_population_raw_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_population_raw_bs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_covidbs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "covid_population.csv",
						"container": "population"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "place_type",
						"type": "String"
					},
					{
						"name": "confirmed",
						"type": "String"
					},
					{
						"name": "deaths",
						"type": "String"
					},
					{
						"name": "order_for_place",
						"type": "String"
					},
					{
						"name": "is_last",
						"type": "String"
					},
					{
						"name": "estimated_population_2019",
						"type": "String"
					},
					{
						"name": "city_ibge_code",
						"type": "String"
					},
					{
						"name": "confirmed_per_100k_inhabitants",
						"type": "String"
					},
					{
						"name": "death_rate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_covidbs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_population_raw_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_dls_coviddl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('covid_population_',formatDateTime(utcNow(),'MMddyyyy'),'.csv')",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_dls_coviddl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_movies_raw_bs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobMovies",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "movies.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output_movies_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobMovies",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobMovies')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobMovies_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_covidbs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_covidbs_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_dls_coviddl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_dls_coviddl_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_dls_coviddl_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "input_movies_raw_bs",
								"type": "DatasetReference"
							},
							"name": "Movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "output_movies_raw",
								"type": "DatasetReference"
							},
							"name": "MoviesClean"
						},
						{
							"dataset": {
								"referenceName": "output_movies_raw",
								"type": "DatasetReference"
							},
							"name": "MoviesbyYear"
						}
					],
					"transformations": [
						{
							"name": "YearExtraction"
						},
						{
							"name": "MoviesCount"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as string,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Movies",
						"Movies derive({Año} = toInteger(trim(right(title,6), '()')),",
						"          Titulo = toString(left(title,length(title)-6))) ~> YearExtraction",
						"YearExtraction aggregate(groupBy({Año}),",
						"     MoviesCount = count()) ~> MoviesCount",
						"YearExtraction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies-clean.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesClean",
						"MoviesCount sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['MoviesbyYear.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesbyYear"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/input_movies_raw_bs')]",
				"[concat(variables('factoryId'), '/datasets/output_movies_raw')]"
			]
		}
	]
}